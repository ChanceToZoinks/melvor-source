declare function gonative_iap_purchases(data: any): void;
declare function gonative_info_ready(data: any): void;
declare var __awaiter: any;
declare class NativeManager {
  deviceInfo: {};
  onesignalInfo: {};
  scheduledPushNotifications: any[];
  waitingForPurchaseToFinish: boolean;
  waitingForPurchaseInfoToLoad: boolean;
  productIDInPurchaseFlow: string;
  receiptData: {};
  nativeAppIAPLoaded: boolean;
  productIDs: {
    ios: {
      fullGame: string;
      expansions: string[];
    };
    android: {
      fullGame: string;
      expansions: string[];
    };
  };
  defaultIAPPricing: {
    ios: {
      fullGame: string;
      expansions: string[];
    };
    android: {
      fullGame: string;
      expansions: string[];
    };
  };
  get isIOS(): boolean;
  get isAndroid(): boolean;
  get isMobile(): boolean;
  get isSteam(): boolean;
  initNativeManager(): any;
  hideNativeIOSElements(): void;
  showNativeIOSElements(): void;
  hideNativeAndroidElements(): void;
  showNativeAndroidElements(): void;
  schedulePushNotification(notificationType: any, msg: any, endDate: any): any;
  cancelUniquePushNotification(): any;
  cancelPushNotification(data: any): any;
  saveScheduledPushNotification(id: any, endDate: any, platform: any): void;
  findScheduledPushNotification(id: any): void;
  findUniqueScheduledPushNotification(): any;
  encode(writer: any): any;
  decode(reader: any, version: any): void;
  convertOldNotifications(oldNotifications: any): void;
  get isNativeApp(): boolean;
  get isAndroidFullVersionNativeApp(): boolean;
  showNativeOnlyElements(): void;
  showBrowserOnlyElements(): void;
  getDeviceInfo(): any;
  getOneSignalInfo(): any;
  registerOneSignal(): void;
  sharePage(URL: any): void;
  openAppSettings(): void;
  clearWebviewCache(): void;
  setDeviceBrightness(brightness: any, restoreOnNavigation: any): void;
  setNonPersistentLocalSetting(key: any, value: any): void;
  setNonPersistentCallback(result: any): void;
  getNonPersistentLocalSetting(key: any): void;
  getNonPersistentCallback(result: any): void;
  deleteNonPersistentLocalSetting(key: any): void;
  deleteAllNonPersistentLocalSettings(): void;
  deleteNonPersistentCallback(result: any): void;
  setPersistentLocalSetting(key: any, value: any): void;
  setPersistentCallback(result: any): void;
  getPersistentLocalSetting(key: any): void;
  getPersistentCallback(result: any): void;
  deletePersistentLocalSetting(key: any): void;
  deleteAllPersistentLocalSettings(): void;
  deletePersistentCallback(result: any): void;
  triggerHaptic(style: any): void;
  promptForAppReview(): void;
  purchaseIAP(productID: any): void;
  restorePurchases(): void;
  purchaseInProgressPopup(): void;
  purchaseAlreadyMade(): void;
  validateIOSIAP(data: any, productID: any): boolean;
  validateAndroidIAP(data: any, productID: any): boolean;
  getIAPPrice(productID: any, formatted: any): string;
  getFullGameIAPProductID(): string;
  getExpansionIAPProductID(expansionID: any): string;
  buyFullGameSwal(skill: any): void;
  buyExpansion1Swal(): void;
  buyTheFullGameFirst(): void;
  finalizePurchaseIAP(productID: any): any;
}
declare const nativeManager: NativeManager;
